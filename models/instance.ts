/*
Lambda Cloud API

API for interacting with the Lambda GPU Cloud

The version of the OpenAPI document: 1.5.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { InstanceType } from './instance-type';
import { Region } from './region';

/**
 * Virtual machine (VM) in Lambda Cloud
 * @export
 * @interface Instance
 */
export interface Instance {
    /**
     * Unique identifier (ID) of an instance
     * @type {string}
     * @memberof Instance
     */
    'id': string;
    /**
     * User-provided name for the instance
     * @type {string}
     * @memberof Instance
     */
    'name'?: string | null;
    /**
     * IPv4 address of the instance
     * @type {string}
     * @memberof Instance
     */
    'ip'?: string | null;
    /**
     * The current status of the instance
     * @type {string}
     * @memberof Instance
     */
    'status': InstanceStatusEnum;
    /**
     * Names of the SSH keys allowed to access the instance
     * @type {Array<string>}
     * @memberof Instance
     */
    'ssh_key_names': Array<string>;
    /**
     * Names of the file systems, if any, attached to the instance
     * @type {Array<string>}
     * @memberof Instance
     */
    'file_system_names': Array<string>;
    /**
     * 
     * @type {Region}
     * @memberof Instance
     */
    'region'?: Region;
    /**
     * 
     * @type {InstanceType}
     * @memberof Instance
     */
    'instance_type'?: InstanceType;
    /**
     * Hostname assigned to this instance, which resolves to the instance\'s IP.
     * @type {string}
     * @memberof Instance
     */
    'hostname'?: string | null;
    /**
     * Secret token used to log into the jupyter lab server hosted on the instance.
     * @type {string}
     * @memberof Instance
     */
    'jupyter_token'?: string | null;
    /**
     * URL that opens a jupyter lab notebook on the instance.
     * @type {string}
     * @memberof Instance
     */
    'jupyter_url'?: string | null;
}

type InstanceStatusEnum = 'active' | 'booting' | 'unhealthy' | 'terminating' | 'terminated'


